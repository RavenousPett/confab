{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Notifications","notifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","concat","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","data","match","params","SignIn","_Component","_getPrototypeOf2","_this","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","email","password","handleChange","e","setState","defineProperty","target","value","hanldeSubmit","preventDefault","signIn","inherits","createClass","authError","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","response","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","path","exact","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0d0357df.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { signOut } from '../../store/actions/authActions';\n\nconst SignedInLinks = (props) => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to=\"/create\">New Project</NavLink></li>\n            <li><button onClick={props.signOut}>Log Out</button></li>\n            <li>\n                <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\n                    {props.profile.initials}\n                </NavLink>\n            </li>\n        </ul>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\n","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase})  => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS' });\n        }).catch((err) => {\n            dispatch({ type: 'LOGIN_ERROR', err });\n        });\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGN_OUT_SUCCESS' });\n        });\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((response) => {\n            return firestore.collection('users').doc(response.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            });\n        }).then(() => {\n            dispatch({ type: 'SIGN_UP_SUCCESS' });\n        }).catch((err) => {\n            dispatch({ type: 'SIGN_UP_ERROR', err});\n        });\n    }\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\n            <li><NavLink to=\"/signin\">Log In</NavLink></li>\n        </ul>\n    );\n}\n\nexport default SignedOutLinks;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux';\n\nconst Navbar = (props) => {\n    const { auth, profile } = props;\n\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\n\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to=\"/\" className=\"brand-logo\">Confab</Link>\n                {links}\n            </div>\n        </nav>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    console.log('Navbar', state);\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from 'react';\nimport moment from 'moment';\n\nconst Notifications = (props) => {\n    const { notifications } = props;\n\n    return (\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    \n                    <span className=\"card-title\">Notifications</span>\n\n                    <ul className=\"notifications\">\n                        { notifications && notifications.map(notification => {\n                            return (\n                                <li key={notification.id}>\n\n                                    <span className=\"pink-text\">{notification.user} </span>\n\n                                    <span>{notification.content}</span>\n\n                                    <div className=\"grey-text notification-date\">\n                                        {moment(notification.time.toDate()).fromNow()}\n                                    </div>\n\n                                </li>\n                            );\n                        }) }\n                    </ul>\n\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Notifications;\n","import React from 'react';\nimport moment from 'moment';\n\nconst ProjectSummary = ({ project }) => {\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n                \n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{ project.title }</span>\n\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n            </div>\n\n        </div>\n    );\n}\n\nexport default ProjectSummary;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ProjectSummary from './ProjectSummary';\n\nconst ProjectList = ({ projects }) => {\n    return (\n        <div className=\"project-list section\">\n            { projects && projects.map(project =>{\n                return (\n                    <Link to={`/project/${project.id}`} key={project.id}>\n                        <ProjectSummary project={project} />\n                    </Link>\n                );\n            }) }        \n        </div>\n    );\n}\n\nexport default ProjectList;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\n\nclass Dashboard extends Component {\n    render() {\n        const { projects, auth, notifications } = this.props;\n\n        if (!auth.uid) return <Redirect to=\"/signin\" />\n\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects} />\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications notifications={notifications} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\n    ])\n)(Dashboard);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nconst ProjectDetails = (props) => {\n    const { project, auth } = props;\n\n    if (!auth.uid) return <Redirect to=\"/signin\" />\n\n    if (project) {\n        return(\n            <div className=\"container section project-details\">\n                <div className=\"card z-depth-0\">\n\n                    <div className=\"card-content\">\n                        <span className=\"card-title\">{project.title}</span>\n                        <p>{project.content}</p>\n                    </div>\n\n                    <div className=\"card-action grey lighten-4 grey-text\">\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\n                    </div>\n\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"container center\">\n                <p>Loading project...</p>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const projects = state.firestore.data.projects;\n\n    return {\n        project: projects ? projects[ownProps.match.params.id] : null,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects' }\n    ])\n)(ProjectDetails)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { signIn } from '../../store/actions/authActions';\n\nexport class SignIn extends Component {\n    state = { email: '', password: '' };\n\n    handleChange = (e) => {\n        this.setState({ \n            [e.target.id]: e.target.value\n        });\n    }\n\n    hanldeSubmit = (e) => {\n        e.preventDefault();\n\n        this.props.signIn(this.state);\n    }\n\n    render() {\n        const { authError, auth } = this.props;\n\n        if (auth.uid) return <Redirect to=\"/\" />\n\n        return (\n            <div className=\"container\">\n                \n                <form onSubmit={this.hanldeSubmit} className=\"white\">\n\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n\n                        <div className=\"red-text center\">\n                            { authError ? <p>{authError}</p> : null }\n                        </div>\n                    </div>\n                \n                </form>\n                \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (credentials) => dispatch(signIn(credentials))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { signUp } from '../../store/actions/authActions';\n\nexport class SignUp extends Component {\n    state = { \n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    };\n\n    handleChange = (e) => {\n        this.setState({ \n            [e.target.id]: e.target.value\n        });\n    }\n\n    hanldeSubmit = (e) => {\n        e.preventDefault();\n\n        this.props.signUp(this.state);\n    }\n\n    render() {\n        const { auth, authError } = this.props;\n\n        if (auth.uid) return <Redirect to=\"/\" />\n\n        return (\n            <div className=\"container\">\n                \n                <form onSubmit={this.hanldeSubmit} className=\"white\">\n\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n                        <div className=\"red-text center\">\n                            { authError ? <p>{ authError }</p> : null }\n                        </div>\n                    </div>\n                \n                </form>\n                \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { createProject } from '../../store/actions/projectActions';\n\nexport class CreateProject extends Component {\n    state = {\n        title: '',\n        content: ''\n    };\n\n    handleChange = (e) => {\n        this.setState({ \n            [e.target.id]: e.target.value\n        });\n    }\n\n    hanldeSubmit = (e) => {\n        e.preventDefault();\n\n        this.props.createProject(this.state);\n\n        this.props.history.push('/');\n    }\n\n    render() {\n        const { auth } = this.props;\n\n        if (!auth.uid) return <Redirect to=\"/signin\" />\n\n        return (\n            <div className=\"container\">\n                \n                <form onSubmit={this.hanldeSubmit} className=\"white\">\n\n                    <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Project Content</label>\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                    </div>\n                \n                </form>\n                \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","export const createProject = (project) => {\n    return (dispatch, getState, { getFirestore }) => {\n        const firestore = getFirestore();\n        \n        const profile = getState().firebase.profile;\n\n        const authorId = getState().firebase.auth.uid;\n\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(\n            () => {\n                dispatch({\n                    type: 'CREATE_PROJECT',\n                    project\n                });\n            }\n        ).catch(\n            (err) => {\n                dispatch({\n                    type: 'CREATE_PROJECT_ERROR',\n                    err\n                })\n            }\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n          <div className=\"App\">\n            <Navbar />\n            <Switch>\n              <Route path=\"/\" exact component={Dashboard} />\n              <Route path=\"/project/:id\" component={ProjectDetails} />\n              <Route path=\"/signin\" component={SignIn} />\n              <Route path=\"/signup\" component={SignUp} />\n              <Route path=\"/create\" component={CreateProject} />\n            </Switch>\n          </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n};\n\nconst authReducer = (state = initState, action) => {\n    switch(action.type) {\n        case 'LOGIN_ERROR':\n            console.log('login error');\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGN_OUT_SUCCESS':\n            console.log('sign out success');\n            return state;\n        case 'SIGN_UP_SUCCESS':\n            console.log('sign up success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGN_UP_ERROR':\n            console.log('sign up error');\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default: \n            return state;\n    }\n}\n\nexport default authReducer;\n","const initState = {\n    'projects': [\n        {id: '1', title: 'Book car', 'content': 'Ideally a pick up truck'},\n        {id: '2', title: 'Book flights', 'content': 'Please dont sit me next to jed'},\n        {id: '3', title: 'Book TWE', 'content': 'The Whole Enchilada!!'}\n    ]\n};\n\nconst projectReducer = (state = initState, action) => {\n    switch (action.type)  {\n        case 'CREATE_PROJECT':\n            console.log('created project', action.project)\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('create project error', action.err)\n            return state;\n        default:\n            return state\n    }\n}\n\nexport default projectReducer;\n","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer;\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Initialize Firebase\nvar config = {\n    apiKey: \"AIzaSyARs9juFAl8ntl0kXZB3vDZoLziXDnzRos\",\n    authDomain: \"confab-b8a31.firebaseapp.com\",\n    databaseURL: \"https://confab-b8a31.firebaseio.com\",\n    projectId: \"confab-b8a31\",\n    storageBucket: \"confab-b8a31.appspot.com\",\n    messagingSenderId: \"749221437257\"\n};\n\nfirebase.initializeApp(config);\n// firebase.firestore().settings({ timestampsInSnapshots: true });\n\nexport default firebase;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport rootReducer from './store/reducers/rootReducer';\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(\n    rootReducer,\n    compose(\n        applyMiddleware(\n            thunk.withExtraArgument({\n                getFirebase, getFirestore\n            })\n        ),\n        reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true}),\n        reduxFirestore(fbConfig)\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>,\n        document.getElementById('root')\n    );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}